{
  "name": "generator-full-stack",
  "description": "",
  "keywords": [
    "yeoman-generator"
  ],
  "files": [
    "generators/app"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/saiichihashimoto/generator-full-stack.git"
  },
  "scripts": {
    "build": "run-s build:*",
    "build:generators": "rm -rf generators && cp -v -r src generators/ && babel src --out-dir generators --source-maps --ignore templates/*",
    "check": "run-s check:*",
    "check:css": "stylelint \"**/*.css\" --color --ignore-path .gitignore",
    "check:js": "eslint . --color --ignore-path .gitignore",
    "check:json": "find . -name \\*.json | grep -v node_modules | xargs -n 1 jsonlint --quiet",
    "deploy": "npm publish",
    "fix": "run-s fix:*",
    "fix:css": "( git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.css$\" | xargs -n 1 stylefmt --config .stylelintrc ) && ( git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.css$\" | xargs -n 1 git add )",
    "fix:js": "( git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.js$\" | xargs -n 1 eslint --fix --color ) && ( git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.js$\" | xargs -n 1 git add )",
    "fix:json": "( git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.json$\" | xargs -n 1 jsonlint --in-place ) && ( git diff --staged --name-only --diff-filter=ACMRTUXB | grep \"\\.json$\" | xargs -n 1 git add )",
    "fix:package_json": "sort-package-json && git add package.json",
    "fixall": "run-s fixall:*",
    "fixall:css": "( find . -name \\*.css | grep -v node_modules | grep -v generators | xargs -n 1 stylefmt --config .stylelintrc )",
    "fixall:js": "( find . -name \\*.js | grep -v node_modules | grep -v generators | xargs -n 1 eslint --fix --color )",
    "fixall:json": "( find . -name \\*.json | grep -v node_modules | xargs -n 1 jsonlint --in-place )",
    "fixall:package_json": "sort-package-json",
    "release": "semantic-release pre && npm run build && npm run deploy && semantic-release post",
    "start": "watch 'npm run build:generators' src",
    "test": "echo no tests"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "pre-commit": "npm run fix && npm run check",
      "commit-msg": "validate-commit-msg",
      "pre-push": "npm run check && npm run test"
    },
    "validate-commit-msg": {
      "helpMessage": "Install commitizen and use `git cz` instead of `git commit` https://github.com/commitizen/cz-cli#installing-the-command-line-tool"
    }
  },
  "dependencies": {
    "yeoman-generator": "^0.24.1"
  },
  "devDependencies": {
    "babel-cli": "^6.14.0",
    "babel-eslint": "^6.1.2",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.11.5",
    "babel-preset-es2015": "^6.13.2",
    "babel-preset-react": "^6.11.1",
    "cz-conventional-changelog": "^1.2.0",
    "eslint": "^3.3.0",
    "eslint-config-xo": "^0.15.3",
    "eslint-plugin-babel": "^3.3.0",
    "eslint-plugin-react": "^6.2.0",
    "ghooks": "^1.3.2",
    "jsonlint": "^1.6.2",
    "npm-run-all": "^3.0.0",
    "semantic-release": "^4.3.5",
    "sort-package-json": "^1.4.0",
    "stylefmt": "^4.2.3",
    "stylelint": "^7.2.0",
    "stylelint-config-standard": "^13.0.0",
    "validate-commit-msg": "^2.8.0",
    "watch": "^0.19.2"
  },
  "engines": {
    "node": "^6.1.0",
    "npm": "^3.9.0"
  }
}